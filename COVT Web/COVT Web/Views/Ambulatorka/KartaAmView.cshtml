@model COVT_Web.Models.ViewModel.KartaAmView

<head>
    <link rel="stylesheet" href="~/css/mystile.css" />
</head>
<body>
    <form asp-action="KartaAmView" asp-controller="Ambulatorka" asp-route-id="@Model.id_karti_patsienta" id="myForm">

        <div>
            <label asp-for="@Model.patsient">Пациент: @Model.patsient</label>
            <input type="hidden" asp-for="@Model.patsient" value="@Model.patsient" />
            <input type="hidden" asp-for="@Model.adres" value="@Model.adres" />
            <input type="hidden" asp-for="@Model.dr" value="@Model.dr" />
        </div>

        <div>
            <label>Дата приёма: @Model.data_priema</label>
        </div>

        <div>
            <label>Врач: @Model.vrach</label>
        </div>

        <div>
            <label>Болезнь: @Model.bolezn</label>
        </div>

        <div>
            <label>Кабинет: @Model.id_kobineta</label>
        </div>

        <div>
            <label>Жалобы:</label>
            <textarea asp-for="@Model.zhalobi" value="@Model.zhalobi"></textarea>
        </div>

        <div>
            <label>История заболевания:</label>
            <textarea asp-for="@Model.ist_zab" value="@Model.ist_zab"></textarea>
        </div>

        <div>
            <label>Настоящий статус:</label>
            <textarea asp-for="@Model.nast_stat" value="@Model.nast_stat"></textarea>
        </div>

        <div>
            <label>Местный статус:</label>
            <textarea asp-for="@Model.mest_stat" value="@Model.mest_stat"></textarea>
        </div>

        <div>
            <label>Дополнительные методы обследования:</label>
            <textarea asp-for="@Model.dop_met_obsl" value="@Model.dop_met_obsl"></textarea>
        </div>

        <div>
            <label>Диагноз:</label>
            <textarea asp-for="@Model.diagnoz" value="@Model.diagnoz"></textarea>
        </div>

        <div>
            <label>План обследования:</label>
            <textarea asp-for="@Model.plan_obsl" value="@Model.plan_obsl"></textarea>
        </div>

        <div>
            <label>План лечения:</label>
            <textarea asp-for="@Model.plan_lech" value="@Model.plan_lech"></textarea>
        </div>

        <div>
            <label>Заключение:</label>
            <textarea asp-for="@Model.zakl" value="@Model.zakl"></textarea>
        </div>

        <div>
            <button type="submit" class="button-like">Сохранить</button>

        </div>
    </form>
    <span><button id="generateButton" class="button-like">Сгенерировать документ</button></span>

    <h2>Информация о файлах:</h2>
    <table class="content-table">
        <thead>
            <tr>
                <th>Дата загрузки</th>
                <th>Описание</th>
                <th>#</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var file in ViewBag.Files)
            {
                <tr>
                    <td>@file.date</td>
                    <td>@file.opisanie</td>
                    <td>
                        <a asp-action="OpenFile" asp-controller="Files" asp-route-id="@file.id_file">Смотреть</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</body>



@section Scripts{
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script type="text/javascript">
        $("#generateButton").click(function () {
            var form = $("#myForm").serialize();
            //form = new FormData(form);
            console.log(form);

            GetFile(form);
        });

        function GetFile(formData) {
            $.ajax({
                url: '/Ambulatorka/GenerateDocument', //Изменить на свой адрес
                type: 'POST',
                xhrFields: { responseType: 'blob' }, //Указываем что ожидаемый тип ответа blob
                data: formData,
                processData: false,
                success: function (response, status, xhr) {
                    var fileName = GetFileName(xhr);

                    // Создания ссылки на файл
                    var url = window.URL.createObjectURL(response);

                    // Создание времменого тега ссылки
                    var link = document.createElement('a');

                    // Присваивания ссылки файла к тегу
                    link.href = url;

                    // Присваивания названия файла
                    link.download = fileName;

                    //Добавление тега ссылки в тег body
                    document.body.appendChild(link);

                    //Имитация нажатия на ссылку
                    link.click();

                    // Удаление временной ссылки
                    window.URL.revokeObjectURL(url);
                },
                error: function (xhr, status, error) {
                    console.error('Произошла ошибка:', error);
                }
            });
        }

        //Метод возвращает имя файла со стороны сервера
        function GetFileName(xhr) {
            var fileName = "default_name.docx";

            var contentDisposition = xhr.getResponseHeader('Content-Disposition');
            var disposition = xhr.getResponseHeader('Content-Disposition');

            if (disposition && disposition.indexOf('attachment') !== -1) {
                var fileNameRegex = /filename[^;=\n]*=((['"]).*?\2|[^;\n]*)/;
                var matches = fileNameRegex.exec(disposition);

                if (matches != null && matches[1]) {
                    fileName = matches[1].replace(/['"]/g, '');
                    fileName = decodeURI(fileName);
                }
            }

            return fileName;
        }

        function saveByteArray(reportName, byte) {
            var blob = new Blob([byte], { type: "application/vnd.openxmlformats-officedocument.wordprocessingml.document" });
            var link = document.createElement('a');
            link.href = URL.createObjectURL(blob);
            var fileName = reportName;
            link.download = fileName;
            link.click();

            URL.revokeObjectURL(link.href);
        };

        function updateTextareaHeight(textarea) {
            const scrollTop = textarea.scrollTop;

            textarea.style.height = "auto"; // Сначала установим auto
            let scHeight = textarea.scrollHeight;
            textarea.style.height = `${scHeight}px`;

            textarea.scrollTop = scrollTop;
        }

        // Обработчик для реагирования на нажатия клавиш в поле textarea
        $('textarea').on('input', function () {
            updateTextareaHeight(this);
        });

        $(document).ready(function () {
            $('#plan_obsl, #plan_lech').keydown(function (e) {
                if (e.keyCode == 13) {
                    e.preventDefault();

                    var text = $(this).val();
                    var lines = text.split('\n');
                    var numberedLines = '';
                    var hasNumberedList = /^\d+\. /; // Регулярное выражение для проверки наличия номера абзаца

                    for (var i = 0; i < lines.length; i++) {
                        if (hasNumberedList.test(lines[i])) {
                            // Пропускаем нумерацию, если строка уже начинается с номера абзаца
                            numberedLines += lines[i] + '\n';
                        } else {
                            numberedLines += (i + 1) + '. ' + lines[i] + '\n';
                        }
                    }

                    $(this).val(numberedLines);
                }
            });
        });
    </script>
}
